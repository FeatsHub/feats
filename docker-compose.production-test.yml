version: '3'

volumes:
  postgres_data: {}
  postgres_data_backups: {}

services:
  api: &django
    build:
      context: ./backend/
      dockerfile: ./compose/production/Dockerfile
    restart: always
    depends_on:
      - redis
      - postgres
      - celeryworker
    environment:
      - DJANGO_DEBUG=False
      - DJANGO_SETTINGS_MODULE=main.settings.production
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=feats
      - POSTGRES_USER=feats
      - POSTGRES_PASSWORD=feats
    volumes:
      - /var/www/static/:/var/www/static/
      - /var/certbot/conf:/etc/letsencrypt/:ro
    expose:
      - 8000
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`api.feats-app.com`)"
      - "traefik.http.routers.api.tls=true"
      - "traefik.http.routers.api.tls.certresolver=letsencrypt"
      - "traefik.http.services.api.loadbalancer.server.port=8000"
      - traefik.port=80


    command: uwsgi-api

  celeryworker:
    <<: *django
    depends_on:
      - redis
      - postgres
      - celerybeat
    ports: []
    command: celery-worker

  celerybeat:
    <<: *django
    depends_on:
      - redis
      - postgres
    ports: []
    command: celery-beat

  postgres:
    image: postgis/postgis:15-3.3
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - postgres_data_backups:/backups
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=feats
      - POSTGRES_USER=feats
      - POSTGRES_PASSWORD=feats
    ports:
      - "5432:5432"

  redis:
    image: redis:7

  traefik:
    build:
      context: ./backend/
      dockerfile: ./compose/production/traefik/Dockerfile
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./traefik-public-certificates:/certificates"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.rule=Host(`dashboard.feats-app.com`)"
      - "traefik.http.routers.dashboard.tls=true"
      - "traefik.http.routers.dashboard.tls.certresolver=letsencrypt"
      - "traefik.http.routers.dashboard.service=api@internal"
      - "traefik.http.routers.dashboard.middlewares=auth"
      - "traefik.http.middlewares.auth.basicauth.users=admin:$$apr1$$NalSfSDx$$41GFXjoxYOI4xi9qAph2a/"