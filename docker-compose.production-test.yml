version: '3'

volumes:
  postgres_data: {}
  postgres_data_backups: {}

services:
  api: &django
    build:
      context: ./backend/
      dockerfile: ./compose/production/Dockerfile
    restart: always
    depends_on:
      - redis
      - postgres
      - celeryworker
    environment:
      - DJANGO_DEBUG=False
      - DJANGO_SETTINGS_MODULE=main.settings.production
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=feats
      - POSTGRES_USER=feats
      - POSTGRES_PASSWORD=feats
    volumes:
      - /var/www/static/:/var/www/static/
      - /var/certbot/conf:/etc/letsencrypt/:ro
    expose:
      - "8000"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.django.rule=Host(`django.localhost`)"
    command: uwsgi-api

  celeryworker:
    <<: *django
    depends_on:
      - redis
      - postgres
      - celerybeat
    ports: []
    command: celery-worker

  celerybeat:
    <<: *django
    depends_on:
      - redis
      - postgres
    ports: []
    command: celery-beat

  postgres:
    image: postgis/postgis:15-3.3
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - postgres_data_backups:/backups
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=feats
      - POSTGRES_USER=feats
      - POSTGRES_PASSWORD=feats
    ports:
      - "5432:5432"

  redis:
    image: redis:7

  traefik: # new
    image: traefik:v2.9.6
    ports:
      - "8008:80"
      - "8081:8080"
    volumes:
      - ./traefik.dev.toml:/etc/traefik/traefik.toml
      - /var/run/docker.sock:/var/run/docker.sock:ro