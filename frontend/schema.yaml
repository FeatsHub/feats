openapi: 3.0.3
info:
  title: ''
  version: 0.0.0
paths:
  /api/recipe/:
    get:
      operationId: recipe_list
      parameters:
      - in: query
        name: category
        schema:
          type: array
          items:
            type: integer
        explode: true
        style: form
      - in: query
        name: expand
        schema:
          type: string
        description: List of nested objects
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - recipe
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedRecipeList'
          description: ''
    post:
      operationId: recipe_create
      parameters:
      - in: query
        name: expand
        schema:
          type: string
        description: List of nested objects
      tags:
      - recipe
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Recipe'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Recipe'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Recipe'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recipe'
          description: ''
  /api/recipe/{id}/:
    get:
      operationId: recipe_retrieve
      parameters:
      - in: query
        name: expand
        schema:
          type: string
        description: List of nested objects
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this recipe.
        required: true
      tags:
      - recipe
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recipe'
          description: ''
    put:
      operationId: recipe_update
      parameters:
      - in: query
        name: expand
        schema:
          type: string
        description: List of nested objects
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this recipe.
        required: true
      tags:
      - recipe
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Recipe'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Recipe'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Recipe'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recipe'
          description: ''
    patch:
      operationId: recipe_partial_update
      parameters:
      - in: query
        name: expand
        schema:
          type: string
        description: List of nested objects
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this recipe.
        required: true
      tags:
      - recipe
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedRecipe'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedRecipe'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedRecipe'
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recipe'
          description: ''
    delete:
      operationId: recipe_destroy
      parameters:
      - in: query
        name: expand
        schema:
          type: string
        description: List of nested objects
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this recipe.
        required: true
      tags:
      - recipe
      security:
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/recipe_category/:
    get:
      operationId: recipe_category_list
      parameters:
      - in: query
        name: expand
        schema:
          type: string
        description: List of nested objects
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - recipe_category
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedRecipeCategoryList'
          description: ''
    post:
      operationId: recipe_category_create
      parameters:
      - in: query
        name: expand
        schema:
          type: string
        description: List of nested objects
      tags:
      - recipe_category
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecipeCategory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RecipeCategory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RecipeCategory'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecipeCategory'
          description: ''
  /api/recipe_category/{id}/:
    get:
      operationId: recipe_category_retrieve
      parameters:
      - in: query
        name: expand
        schema:
          type: string
        description: List of nested objects
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this recipe category.
        required: true
      tags:
      - recipe_category
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecipeCategory'
          description: ''
    put:
      operationId: recipe_category_update
      parameters:
      - in: query
        name: expand
        schema:
          type: string
        description: List of nested objects
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this recipe category.
        required: true
      tags:
      - recipe_category
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecipeCategory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RecipeCategory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RecipeCategory'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecipeCategory'
          description: ''
    patch:
      operationId: recipe_category_partial_update
      parameters:
      - in: query
        name: expand
        schema:
          type: string
        description: List of nested objects
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this recipe category.
        required: true
      tags:
      - recipe_category
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedRecipeCategory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedRecipeCategory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedRecipeCategory'
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecipeCategory'
          description: ''
    delete:
      operationId: recipe_category_destroy
      parameters:
      - in: query
        name: expand
        schema:
          type: string
        description: List of nested objects
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this recipe category.
        required: true
      tags:
      - recipe_category
      security:
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/recipe_image/:
    post:
      operationId: recipe_image_create
      tags:
      - recipe_image
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecipeImage'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RecipeImage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RecipeImage'
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecipeImage'
          description: ''
  /api/recipe_image/{id}/:
    delete:
      operationId: recipe_image_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this recipe image.
        required: true
      tags:
      - recipe_image
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/recipe_ingredient/:
    get:
      operationId: recipe_ingredient_list
      parameters:
      - in: query
        name: expand
        schema:
          type: string
        description: List of nested objects
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - recipe_ingredient
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedRecipeIngredientList'
          description: ''
    post:
      operationId: recipe_ingredient_create
      parameters:
      - in: query
        name: expand
        schema:
          type: string
        description: List of nested objects
      tags:
      - recipe_ingredient
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecipeIngredient'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RecipeIngredient'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RecipeIngredient'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecipeIngredient'
          description: ''
  /api/recipe_ingredient/{id}/:
    get:
      operationId: recipe_ingredient_retrieve
      parameters:
      - in: query
        name: expand
        schema:
          type: string
        description: List of nested objects
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this recipe ingredient.
        required: true
      tags:
      - recipe_ingredient
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecipeIngredient'
          description: ''
    put:
      operationId: recipe_ingredient_update
      parameters:
      - in: query
        name: expand
        schema:
          type: string
        description: List of nested objects
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this recipe ingredient.
        required: true
      tags:
      - recipe_ingredient
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecipeIngredient'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RecipeIngredient'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RecipeIngredient'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecipeIngredient'
          description: ''
    patch:
      operationId: recipe_ingredient_partial_update
      parameters:
      - in: query
        name: expand
        schema:
          type: string
        description: List of nested objects
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this recipe ingredient.
        required: true
      tags:
      - recipe_ingredient
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedRecipeIngredient'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedRecipeIngredient'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedRecipeIngredient'
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecipeIngredient'
          description: ''
    delete:
      operationId: recipe_ingredient_destroy
      parameters:
      - in: query
        name: expand
        schema:
          type: string
        description: List of nested objects
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this recipe ingredient.
        required: true
      tags:
      - recipe_ingredient
      security:
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/schema/:
    get:
      operationId: schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - ckb
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - schema
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /api/user/:
    get:
      operationId: user_list
      parameters:
      - in: query
        name: email
        schema:
          type: string
      - in: query
        name: expand
        schema:
          type: string
        description: List of nested objects
      - in: query
        name: first_name
        schema:
          type: string
      - in: query
        name: is_active
        schema:
          type: boolean
      - in: query
        name: last_name
        schema:
          type: string
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: phone
        schema:
          type: string
      - in: query
        name: roles
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - user
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserList'
          description: ''
    post:
      operationId: user_create
      parameters:
      - in: query
        name: expand
        schema:
          type: string
        description: List of nested objects
      tags:
      - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/user/{id}/:
    get:
      operationId: user_retrieve
      parameters:
      - in: query
        name: expand
        schema:
          type: string
        description: List of nested objects
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - user
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: user_update
      parameters:
      - in: query
        name: expand
        schema:
          type: string
        description: List of nested objects
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: user_partial_update
      parameters:
      - in: query
        name: expand
        schema:
          type: string
        description: List of nested objects
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: user_destroy
      parameters:
      - in: query
        name: expand
        schema:
          type: string
        description: List of nested objects
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - user
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/user/login/:
    post:
      operationId: user_login_create
      description: User login
      parameters:
      - in: query
        name: expand
        schema:
          type: string
        description: List of nested objects
      tags:
      - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLogin'
              $ref: '#/components/schemas/UserLogin'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserLogin'
              $ref: '#/components/schemas/UserLogin'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserLogin'
              $ref: '#/components/schemas/UserLogin'
        required: true
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserLogin'
                $ref: '#/components/schemas/UserLogin'
          description: ''
  /api/user/logout/:
    post:
      operationId: user_logout_create
      description: User logout
      parameters:
      - in: query
        name: expand
        schema:
          type: string
        description: List of nested objects
      tags:
      - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLogin'
              $ref: '#/components/schemas/UserLogin'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserLogin'
              $ref: '#/components/schemas/UserLogin'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserLogin'
              $ref: '#/components/schemas/UserLogin'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/user/permissions/:
    get:
      operationId: user_permissions_retrieve
      parameters:
      - in: query
        name: expand
        schema:
          type: string
        description: List of nested objects
      tags:
      - user
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Permission'
          description: ''
  /api/user/register/:
    post:
      operationId: user_register_create
      description: User register view
      parameters:
      - in: query
        name: expand
        schema:
          type: string
        description: List of nested objects
      tags:
      - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPassword'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ResetPassword'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ResetPassword'
        required: true
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/user/request_reset_password/:
    post:
      operationId: user_request_reset_password_create
      description: Reset password
      parameters:
      - in: query
        name: expand
        schema:
          type: string
        description: List of nested objects
      tags:
      - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Email'
              $ref: '#/components/schemas/Email'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Email'
              $ref: '#/components/schemas/Email'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Email'
              $ref: '#/components/schemas/Email'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/user/reset_confirm_password/:
    post:
      operationId: user_reset_confirm_password_create
      description: Reset confirm password
      parameters:
      - in: query
        name: expand
        schema:
          type: string
        description: List of nested objects
      tags:
      - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPassword'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ResetPassword'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ResetPassword'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
components:
  schemas:
    Email:
      type: object
      description: Validate the contact email
      properties:
        email:
          type: string
          format: email
      required:
      - email
    PaginatedRecipeCategoryList:
      type: object
      properties:
        username:
          type: string
      required:
      - username
    Email:
      type: object
      description: Validate the contact email
      properties:
        email:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/RecipeCategory'
    PaginatedRecipeIngredientList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/RecipeIngredient'
    PaginatedRecipeList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Recipe'
    PaginatedUserList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/User'
    PatchedRecipe:
      type: object
      description: |-
        A ModelSerializer that takes additional arguments for
        "fields" and "include" in order to
        control which fields are displayed, and whether to replace simple values with
        complex, nested serializations.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Food name
        description:
          type: string
          title: Food description
        diners:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Diners number
        time:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Cooking time in minutes
        category:
          type: array
          items:
            type: integer
            title: Food categories
          title: Food categories
        ingredients:
          type: array
          items:
            type: integer
            title: Food ingredients
          title: Food ingredients
        image:
          type: integer
          nullable: true
          title: Recipe image
        image_data:
          allOf:
          - $ref: '#/components/schemas/RecipeImage'
          readOnly: true
        category_data:
          type: array
          items:
            $ref: '#/components/schemas/RecipeCategory'
          readOnly: true
    PatchedRecipeCategory:
      type: object
      description: |-
        A ModelSerializer that takes additional arguments for
        "fields" and "include" in order to
        control which fields are displayed, and whether to replace simple values with
        complex, nested serializations.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Category name
          maxLength: 16
    PatchedRecipeIngredient:
      type: object
      description: |-
        A ModelSerializer that takes additional arguments for
        "fields" and "include" in order to
        control which fields are displayed, and whether to replace simple values with
        complex, nested serializations.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Ingredient name
        quantity:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Ingredient quantity
        unit:
          type: string
          title: Measure unit
    PatchedUser:
      type: object
      description: |-
        A ModelSerializer that takes additional arguments for
        "fields" and "include" in order to
        control which fields are displayed, and whether to replace simple values with
        complex, nested serializations.
      properties:
        id:
          type: integer
          readOnly: true
        password:
          type: string
          maxLength: 128
        username:
          type: string
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          title: User email
          title: User email
          maxLength: 254
        first_name:
          type: string
          nullable: true
          title: User first name
          title: User first name
          maxLength: 30
        last_name:
          type: string
          nullable: true
          title: User last name
          title: User last name
          maxLength: 150
        role:
          allOf:
          - $ref: '#/components/schemas/RoleEnum'
          title: User role
        role:
          allOf:
          - $ref: '#/components/schemas/RoleEnum'
          title: User role
        phone:
          type: string
          nullable: true
          title: User phone number
          title: User phone number
          maxLength: 16
        is_active:
          type: boolean
          nullable: true
          title: Is user active
          title: Is user active
        deactivation_datetime:
          type: string
          format: date-time
          readOnly: true
          nullable: true
          title: Datetime when user was deactivated
          title: Datetime when user was deactivated
        login_attempts:
          type: integer
          readOnly: true
          title: User login attemps
        last_bad_login_attempt_datetime:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        has_login_blocked:
          type: boolean
    Permission:
      type: object
      description: Serialize pydrfpermissions
      properties:
        url:
          type: string
        action:
          type: string
      required:
      - action
      - url
    Recipe:
      type: object
      description: |-
        A ModelSerializer that takes additional arguments for
        "fields" and "include" in order to
        control which fields are displayed, and whether to replace simple values with
        complex, nested serializations.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Food name
        description:
          type: string
          title: Food description
        diners:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Diners number
        time:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Cooking time in minutes
        category:
          type: array
          items:
            type: integer
            title: Food categories
          title: Food categories
        ingredients:
          type: array
          items:
            type: integer
            title: Food ingredients
          title: Food ingredients
        image:
          type: integer
          nullable: true
          title: Recipe image
        image_data:
          allOf:
          - $ref: '#/components/schemas/RecipeImage'
          readOnly: true
        category_data:
          type: array
          items:
            $ref: '#/components/schemas/RecipeCategory'
          readOnly: true
      required:
      - category_data
      - description
      - diners
      - id
      - image_data
      - name
      - time
    RecipeCategory:
      type: object
      description: |-
        A ModelSerializer that takes additional arguments for
        "fields" and "include" in order to
        control which fields are displayed, and whether to replace simple values with
        complex, nested serializations.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Category name
          maxLength: 16
      required:
      - id
      - name
    RecipeImage:
      type: object
      description: |-
        A ModelSerializer that takes additional arguments for
        "fields" and "include" in order to
        control which fields are displayed, and whether to replace simple values with
        complex, nested serializations.
      properties:
        id:
          type: integer
          readOnly: true
        image:
          type: string
          format: uri
          nullable: true
          title: Recipe image
      required:
      - id
    RecipeIngredient:
      type: object
      description: |-
        A ModelSerializer that takes additional arguments for
        "fields" and "include" in order to
        control which fields are displayed, and whether to replace simple values with
        complex, nested serializations.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Ingredient name
        quantity:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Ingredient quantity
        unit:
          type: string
          title: Measure unit
      required:
      - id
      - name
      - quantity
      - unit
    ResetPassword:
      type: object
      description: Validate the contact email
      properties:
        token:
          type: string
        new_password1:
          type: string
        new_password2:
          type: string
      required:
      - new_password1
      - new_password2
      - token
    RoleEnum:
      enum:
      - superadmin
      - user
      - user
      type: string
      description: |-
        * `superadmin` - Superadministrador
        * `user` - User
        * `user` - User
    User:
      type: object
      description: |-
        A ModelSerializer that takes additional arguments for
        "fields" and "include" in order to
        control which fields are displayed, and whether to replace simple values with
        complex, nested serializations.
      properties:
        id:
          type: integer
          readOnly: true
        password:
          type: string
          maxLength: 128
        username:
          type: string
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          title: User email
          title: User email
          maxLength: 254
        first_name:
          type: string
          nullable: true
          title: User first name
          title: User first name
          maxLength: 30
        last_name:
          type: string
          nullable: true
          title: User last name
          title: User last name
          maxLength: 150
        role:
          allOf:
          - $ref: '#/components/schemas/RoleEnum'
          title: User role
        role:
          allOf:
          - $ref: '#/components/schemas/RoleEnum'
          title: User role
        phone:
          type: string
          nullable: true
          title: User phone number
          title: User phone number
          maxLength: 16
        is_active:
          type: boolean
          nullable: true
          title: Is user active
          title: Is user active
        deactivation_datetime:
          type: string
          format: date-time
          readOnly: true
          nullable: true
          title: Datetime when user was deactivated
          title: Datetime when user was deactivated
        login_attempts:
          type: integer
          readOnly: true
          title: User login attemps
        last_bad_login_attempt_datetime:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        has_login_blocked:
          type: boolean
      required:
      - deactivation_datetime
      - email
      - has_login_blocked
      - id
      - last_bad_login_attempt_datetime
      - login_attempts
      - username
    UserLogin:
    UserLogin:
      type: object
      properties:
        username:
          type: string
          pattern: ^[\w.@+-]+$
          maxLength: 150
        password:
          type: string
          nullable: true
          maxLength: 128
        csrftoken:
          type: integer
          readOnly: true
      required:
      - csrftoken
      - username
  securitySchemes:
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
