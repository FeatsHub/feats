{
  "swagger": "2.0",
  "info": {
    "title": "SIPS API",
    "description": "Test description",
    "termsOfService": "https://www.google.com/policies/terms/",
    "contact": {
      "email": "contact@example.org"
    },
    "license": {
      "name": "Custom License"
    },
    "version": "0.0.47"
  },
  "host": "localhost:8000",
  "schemes": [
    "http"
  ],
  "basePath": "/api",
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "securityDefinitions": {
    "DRF Token": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "security": [
    {
      "DRF Token": []
    }
  ],
  "paths": {
    "/actionlogging/": {
      "get": {
        "operationId": "actionlogging_list",
        "description": "Method to list actions. The result is paginated",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "from_creation_datetime",
            "in": "query",
            "description": "From created.",
            "type": "string"
          },
          {
            "name": "to_creation_datetime",
            "in": "query",
            "description": "To created.",
            "type": "string"
          },
          {
            "name": "url",
            "in": "query",
            "description": "url on wich the action is performed",
            "type": "string"
          },
          {
            "name": "ip",
            "in": "query",
            "description": "ip that makes the request",
            "type": "string"
          },
          {
            "name": "status_code",
            "in": "query",
            "description": "response code",
            "type": "string"
          },
          {
            "name": "executor_user",
            "in": "query",
            "description": "user who performs the action",
            "type": "string"
          },
          {
            "name": "action",
            "in": "query",
            "description": "action",
            "type": "string"
          },
          {
            "name": "system",
            "in": "query",
            "description": "system to which the service belongs",
            "type": "string"
          },
          {
            "name": "log_id",
            "in": "query",
            "description": "registry identifier",
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "List of fields",
            "type": "string"
          },
          {
            "name": "expand",
            "in": "query",
            "description": "List of nested objects",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/LoggedAction"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "actionlogging"
        ]
      },
      "parameters": []
    },
    "/actionlogging/{id}/": {
      "get": {
        "operationId": "actionlogging_read",
        "description": "Actionlogging query services.",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "List of fields",
            "type": "string"
          },
          {
            "name": "expand",
            "in": "query",
            "description": "List of nested objects",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/LoggedAction"
            }
          },
          "404": {
            "description": "Not found"
          }
        },
        "tags": [
          "actionlogging"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this Action log.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/document_library/": {
      "get": {
        "operationId": "document_library_list",
        "description": "Views for PhotoLibrary REST",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "List of fields",
            "type": "string"
          },
          {
            "name": "expand",
            "in": "query",
            "description": "List of nested objects",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DocumentLibrary"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "document_library"
        ]
      },
      "post": {
        "operationId": "document_library_create",
        "description": "Method to create a document",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DocumentLibraryCreate"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "List of fields",
            "type": "string"
          },
          {
            "name": "expand",
            "in": "query",
            "description": "List of nested objects",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DocumentLibrary"
            }
          },
          "400": {
            "description": "Error creating element"
          }
        },
        "tags": [
          "document_library"
        ]
      },
      "parameters": []
    },
    "/document_library/upload/": {
      "post": {
        "operationId": "document_library_upload",
        "description": "Method to upload an document",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DocumentLibraryFileUpload"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "List of fields",
            "type": "string"
          },
          {
            "name": "expand",
            "in": "query",
            "description": "List of nested objects",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DocumentLibraryFileUpload"
            }
          },
          "400": {
            "description": "File upload error"
          }
        },
        "tags": [
          "document_library"
        ]
      },
      "parameters": []
    },
    "/document_library/{id}/": {
      "get": {
        "operationId": "document_library_read",
        "description": "Method to retrieve a document.",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "List of fields",
            "type": "string"
          },
          {
            "name": "expand",
            "in": "query",
            "description": "List of nested objects",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DocumentLibrary"
            }
          },
          "404": {
            "description": "Not found"
          }
        },
        "tags": [
          "document_library"
        ]
      },
      "put": {
        "operationId": "document_library_update",
        "description": "Method to update a document",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DocumentLibraryUpdate"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "List of fields",
            "type": "string"
          },
          {
            "name": "expand",
            "in": "query",
            "description": "List of nested objects",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DocumentLibrary"
            }
          },
          "404": {
            "description": "Not found"
          }
        },
        "tags": [
          "document_library"
        ]
      },
      "patch": {
        "operationId": "document_library_partial_update",
        "description": "Method to partially update a document",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DocumentLibraryUpdate"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "List of fields",
            "type": "string"
          },
          {
            "name": "expand",
            "in": "query",
            "description": "List of nested objects",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DocumentLibrary"
            }
          },
          "404": {
            "description": "Not found"
          }
        },
        "tags": [
          "document_library"
        ]
      },
      "delete": {
        "operationId": "document_library_delete",
        "description": "Method to delete a document",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "List of fields",
            "type": "string"
          },
          {
            "name": "expand",
            "in": "query",
            "description": "List of nested objects",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "document_library"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this document library.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/document_library/{id}/base64/": {
      "get": {
        "operationId": "document_library_base64",
        "description": "Views for PhotoLibrary REST",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "List of fields",
            "type": "string"
          },
          {
            "name": "expand",
            "in": "query",
            "description": "List of nested objects",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DocumentLibraryBase64"
            }
          },
          "404": {
            "description": "Not found"
          }
        },
        "tags": [
          "document_library"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this document library.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/general_master_tables/": {
      "get": {
        "operationId": "general_master_tables_list",
        "description": "",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "is_visible",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "id_filter",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "behaviour_ids",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "List of fields",
            "type": "string"
          },
          {
            "name": "expand",
            "in": "query",
            "description": "List of nested objects",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/GeneralMasterTables"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "general_master_tables"
        ]
      },
      "post": {
        "operationId": "general_master_tables_create",
        "description": "Create a new master table. If is_multiple=False (only wants to create one master table), it will create a single master table. In case of trying to create a master table that already exists, it will return an error.\nIf is_multiple=True (wants to create several master table), it will create a master table for each line (separated by \\n). In case of repeating a master table (that already exists), it will NOT return an error and will bypass it.\nBy default (in case 'is_visible' and 'is_multiple' values are NOT passed):\n- is_visible=True\n- is_multiple=False",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GeneralMasterTablesCreate"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "List of fields",
            "type": "string"
          },
          {
            "name": "expand",
            "in": "query",
            "description": "List of nested objects",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GeneralMasterTables"
            }
          }
        },
        "tags": [
          "general_master_tables"
        ]
      },
      "parameters": []
    },
    "/general_master_tables/get_behaviour_ids/": {
      "get": {
        "operationId": "general_master_tables_get_behaviour_ids",
        "description": "Endpoint to list all behaviour ids (the ids that entail special behaviour in the system)",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "is_visible",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "id_filter",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "behaviour_ids",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "table",
            "in": "query",
            "description": "Master table to query",
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "List of fields",
            "type": "string"
          },
          {
            "name": "expand",
            "in": "query",
            "description": "List of nested objects",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/GeneralMasterTables"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "general_master_tables"
        ]
      },
      "parameters": []
    },
    "/general_master_tables/types/": {
      "get": {
        "operationId": "general_master_tables_types",
        "description": "Endpoint returning the list of general system master table types",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "is_visible",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "id_filter",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "behaviour_ids",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "search",
            "in": "query",
            "description": "Search",
            "type": "string"
          },
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "List of fields",
            "type": "string"
          },
          {
            "name": "expand",
            "in": "query",
            "description": "List of nested objects",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GeneralMasterTablesTypes"
            }
          }
        },
        "tags": [
          "general_master_tables"
        ]
      },
      "parameters": []
    },
    "/general_master_tables/{id}/": {
      "get": {
        "operationId": "general_master_tables_read",
        "description": "",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "List of fields",
            "type": "string"
          },
          {
            "name": "expand",
            "in": "query",
            "description": "List of nested objects",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GeneralMasterTables"
            }
          }
        },
        "tags": [
          "general_master_tables"
        ]
      },
      "put": {
        "operationId": "general_master_tables_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GeneralMasterTables"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "List of fields",
            "type": "string"
          },
          {
            "name": "expand",
            "in": "query",
            "description": "List of nested objects",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GeneralMasterTables"
            }
          }
        },
        "tags": [
          "general_master_tables"
        ]
      },
      "patch": {
        "operationId": "general_master_tables_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GeneralMasterTables"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "List of fields",
            "type": "string"
          },
          {
            "name": "expand",
            "in": "query",
            "description": "List of nested objects",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GeneralMasterTables"
            }
          }
        },
        "tags": [
          "general_master_tables"
        ]
      },
      "delete": {
        "operationId": "general_master_tables_delete",
        "description": "",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "List of fields",
            "type": "string"
          },
          {
            "name": "expand",
            "in": "query",
            "description": "List of nested objects",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "general_master_tables"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this general master tables.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/indret/": {
      "get": {
        "operationId": "indret_list",
        "description": "",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "center",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "type_of_road_name",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "type_of_road_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "street_name",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "street_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "district_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "district_name",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "neighborhood_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "neighborhood_name",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "identification",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "types",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "categories",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "titularity__group",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "circuits__type",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "address",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "titularity_identification",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "titularity_name",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "skip_indret",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "has_no_circuits",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "titularity_filter",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "address_filter",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "List of fields",
            "type": "string"
          },
          {
            "name": "expand",
            "in": "query",
            "description": "List of nested objects",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Indret"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "indret"
        ]
      },
      "post": {
        "operationId": "indret_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Indret"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "List of fields",
            "type": "string"
          },
          {
            "name": "expand",
            "in": "query",
            "description": "List of nested objects",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Indret"
            }
          }
        },
        "tags": [
          "indret"
        ]
      },
      "parameters": []
    },
    "/indret/{id}/": {
      "get": {
        "operationId": "indret_read",
        "description": "",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "List of fields",
            "type": "string"
          },
          {
            "name": "expand",
            "in": "query",
            "description": "List of nested objects",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Indret"
            }
          }
        },
        "tags": [
          "indret"
        ]
      },
      "put": {
        "operationId": "indret_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Indret"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "List of fields",
            "type": "string"
          },
          {
            "name": "expand",
            "in": "query",
            "description": "List of nested objects",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Indret"
            }
          }
        },
        "tags": [
          "indret"
        ]
      },
      "patch": {
        "operationId": "indret_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Indret"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "List of fields",
            "type": "string"
          },
          {
            "name": "expand",
            "in": "query",
            "description": "List of nested objects",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Indret"
            }
          }
        },
        "tags": [
          "indret"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this indret.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/indret_action/": {
      "get": {
        "operationId": "indret_action_list",
        "description": "",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "date_scheduled__gte",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "date_scheduled__lte",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "status__iexact",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "action_type",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "inspection_reason",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "technicians",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "result__caution_measures",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "result",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "indret",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "indret__types",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "indrets",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "List of fields",
            "type": "string"
          },
          {
            "name": "expand",
            "in": "query",
            "description": "List of nested objects",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/IndretAction"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "indret_action"
        ]
      },
      "post": {
        "operationId": "indret_action_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IndretAction"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "List of fields",
            "type": "string"
          },
          {
            "name": "expand",
            "in": "query",
            "description": "List of nested objects",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/IndretAction"
            }
          }
        },
        "tags": [
          "indret_action"
        ]
      },
      "parameters": []
    },
    "/indret_action/{id}/": {
      "get": {
        "operationId": "indret_action_read",
        "description": "",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "List of fields",
            "type": "string"
          },
          {
            "name": "expand",
            "in": "query",
            "description": "List of nested objects",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/IndretAction"
            }
          }
        },
        "tags": [
          "indret_action"
        ]
      },
      "put": {
        "operationId": "indret_action_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IndretAction"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "List of fields",
            "type": "string"
          },
          {
            "name": "expand",
            "in": "query",
            "description": "List of nested objects",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/IndretAction"
            }
          }
        },
        "tags": [
          "indret_action"
        ]
      },
      "patch": {
        "operationId": "indret_action_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IndretAction"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "List of fields",
            "type": "string"
          },
          {
            "name": "expand",
            "in": "query",
            "description": "List of nested objects",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/IndretAction"
            }
          }
        },
        "tags": [
          "indret_action"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this indret action.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/indret_circuit/": {
      "get": {
        "operationId": "indret_circuit_list",
        "description": "",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "indret",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "is_active",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "List of fields",
            "type": "string"
          },
          {
            "name": "expand",
            "in": "query",
            "description": "List of nested objects",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/IndretCircuit"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "indret_circuit"
        ]
      },
      "post": {
        "operationId": "indret_circuit_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IndretCircuit"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "List of fields",
            "type": "string"
          },
          {
            "name": "expand",
            "in": "query",
            "description": "List of nested objects",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/IndretCircuit"
            }
          }
        },
        "tags": [
          "indret_circuit"
        ]
      },
      "parameters": []
    },
    "/indret_circuit/{id}/": {
      "get": {
        "operationId": "indret_circuit_read",
        "description": "",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "List of fields",
            "type": "string"
          },
          {
            "name": "expand",
            "in": "query",
            "description": "List of nested objects",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/IndretCircuit"
            }
          }
        },
        "tags": [
          "indret_circuit"
        ]
      },
      "put": {
        "operationId": "indret_circuit_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IndretCircuit"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "List of fields",
            "type": "string"
          },
          {
            "name": "expand",
            "in": "query",
            "description": "List of nested objects",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/IndretCircuit"
            }
          }
        },
        "tags": [
          "indret_circuit"
        ]
      },
      "patch": {
        "operationId": "indret_circuit_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IndretCircuit"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "List of fields",
            "type": "string"
          },
          {
            "name": "expand",
            "in": "query",
            "description": "List of nested objects",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/IndretCircuit"
            }
          }
        },
        "tags": [
          "indret_circuit"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this indret circuit.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/indret_circuit_canteen/": {
      "get": {
        "operationId": "indret_circuit_canteen_list",
        "description": "",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "List of fields",
            "type": "string"
          },
          {
            "name": "expand",
            "in": "query",
            "description": "List of nested objects",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/IndretCircuitCanteen"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "indret_circuit_canteen"
        ]
      },
      "post": {
        "operationId": "indret_circuit_canteen_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IndretCircuitCanteen"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "List of fields",
            "type": "string"
          },
          {
            "name": "expand",
            "in": "query",
            "description": "List of nested objects",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/IndretCircuitCanteen"
            }
          }
        },
        "tags": [
          "indret_circuit_canteen"
        ]
      },
      "parameters": []
    },
    "/indret_circuit_canteen/{id}/": {
      "get": {
        "operationId": "indret_circuit_canteen_read",
        "description": "",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "List of fields",
            "type": "string"
          },
          {
            "name": "expand",
            "in": "query",
            "description": "List of nested objects",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/IndretCircuitCanteen"
            }
          }
        },
        "tags": [
          "indret_circuit_canteen"
        ]
      },
      "put": {
        "operationId": "indret_circuit_canteen_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IndretCircuitCanteen"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "List of fields",
            "type": "string"
          },
          {
            "name": "expand",
            "in": "query",
            "description": "List of nested objects",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/IndretCircuitCanteen"
            }
          }
        },
        "tags": [
          "indret_circuit_canteen"
        ]
      },
      "patch": {
        "operationId": "indret_circuit_canteen_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IndretCircuitCanteen"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "List of fields",
            "type": "string"
          },
          {
            "name": "expand",
            "in": "query",
            "description": "List of nested objects",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/IndretCircuitCanteen"
            }
          }
        },
        "tags": [
          "indret_circuit_canteen"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this indret circuit canteen.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/indret_company/": {
      "get": {
        "operationId": "indret_company_list",
        "description": "",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "List of fields",
            "type": "string"
          },
          {
            "name": "expand",
            "in": "query",
            "description": "List of nested objects",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/IndretCompany"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "indret_company"
        ]
      },
      "post": {
        "operationId": "indret_company_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IndretCompany"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "List of fields",
            "type": "string"
          },
          {
            "name": "expand",
            "in": "query",
            "description": "List of nested objects",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/IndretCompany"
            }
          }
        },
        "tags": [
          "indret_company"
        ]
      },
      "parameters": []
    },
    "/indret_company/{id}/": {
      "get": {
        "operationId": "indret_company_read",
        "description": "",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "List of fields",
            "type": "string"
          },
          {
            "name": "expand",
            "in": "query",
            "description": "List of nested objects",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/IndretCompany"
            }
          }
        },
        "tags": [
          "indret_company"
        ]
      },
      "put": {
        "operationId": "indret_company_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IndretCompany"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "List of fields",
            "type": "string"
          },
          {
            "name": "expand",
            "in": "query",
            "description": "List of nested objects",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/IndretCompany"
            }
          }
        },
        "tags": [
          "indret_company"
        ]
      },
      "patch": {
        "operationId": "indret_company_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IndretCompany"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "List of fields",
            "type": "string"
          },
          {
            "name": "expand",
            "in": "query",
            "description": "List of nested objects",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/IndretCompany"
            }
          }
        },
        "tags": [
          "indret_company"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this indret company.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/indret_contact/": {
      "get": {
        "operationId": "indret_contact_list",
        "description": "",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "List of fields",
            "type": "string"
          },
          {
            "name": "expand",
            "in": "query",
            "description": "List of nested objects",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/IndretContact"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "indret_contact"
        ]
      },
      "post": {
        "operationId": "indret_contact_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IndretContact"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "List of fields",
            "type": "string"
          },
          {
            "name": "expand",
            "in": "query",
            "description": "List of nested objects",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/IndretContact"
            }
          }
        },
        "tags": [
          "indret_contact"
        ]
      },
      "parameters": []
    },
    "/indret_contact/{id}/": {
      "get": {
        "operationId": "indret_contact_read",
        "description": "",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "List of fields",
            "type": "string"
          },
          {
            "name": "expand",
            "in": "query",
            "description": "List of nested objects",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/IndretContact"
            }
          }
        },
        "tags": [
          "indret_contact"
        ]
      },
      "put": {
        "operationId": "indret_contact_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IndretContact"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "List of fields",
            "type": "string"
          },
          {
            "name": "expand",
            "in": "query",
            "description": "List of nested objects",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/IndretContact"
            }
          }
        },
        "tags": [
          "indret_contact"
        ]
      },
      "patch": {
        "operationId": "indret_contact_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IndretContact"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "List of fields",
            "type": "string"
          },
          {
            "name": "expand",
            "in": "query",
            "description": "List of nested objects",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/IndretContact"
            }
          }
        },
        "tags": [
          "indret_contact"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this indret contact.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/indret_sample_point/": {
      "get": {
        "operationId": "indret_sample_point_list",
        "description": "",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "List of fields",
            "type": "string"
          },
          {
            "name": "expand",
            "in": "query",
            "description": "List of nested objects",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/SamplePoint"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "indret_sample_point"
        ]
      },
      "post": {
        "operationId": "indret_sample_point_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SamplePoint"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "List of fields",
            "type": "string"
          },
          {
            "name": "expand",
            "in": "query",
            "description": "List of nested objects",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SamplePoint"
            }
          }
        },
        "tags": [
          "indret_sample_point"
        ]
      },
      "parameters": []
    },
    "/indret_sample_point/{id}/": {
      "get": {
        "operationId": "indret_sample_point_read",
        "description": "",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "List of fields",
            "type": "string"
          },
          {
            "name": "expand",
            "in": "query",
            "description": "List of nested objects",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SamplePoint"
            }
          }
        },
        "tags": [
          "indret_sample_point"
        ]
      },
      "put": {
        "operationId": "indret_sample_point_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SamplePoint"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "List of fields",
            "type": "string"
          },
          {
            "name": "expand",
            "in": "query",
            "description": "List of nested objects",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SamplePoint"
            }
          }
        },
        "tags": [
          "indret_sample_point"
        ]
      },
      "patch": {
        "operationId": "indret_sample_point_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SamplePoint"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "List of fields",
            "type": "string"
          },
          {
            "name": "expand",
            "in": "query",
            "description": "List of nested objects",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SamplePoint"
            }
          }
        },
        "tags": [
          "indret_sample_point"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this sample point.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/indret_titular/": {
      "get": {
        "operationId": "indret_titular_list",
        "description": "",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "identification__iexact",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "identification__icontains",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "CIF__iexact",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "CIF__icontains",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "social_reason__iexact",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "social_reason__icontains",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "full_name_filter",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "List of fields",
            "type": "string"
          },
          {
            "name": "expand",
            "in": "query",
            "description": "List of nested objects",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/IndretTitular"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "indret_titular"
        ]
      },
      "post": {
        "operationId": "indret_titular_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IndretTitular"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "List of fields",
            "type": "string"
          },
          {
            "name": "expand",
            "in": "query",
            "description": "List of nested objects",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/IndretTitular"
            }
          }
        },
        "tags": [
          "indret_titular"
        ]
      },
      "parameters": []
    },
    "/indret_titular/{id}/": {
      "get": {
        "operationId": "indret_titular_read",
        "description": "",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "List of fields",
            "type": "string"
          },
          {
            "name": "expand",
            "in": "query",
            "description": "List of nested objects",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/IndretTitular"
            }
          }
        },
        "tags": [
          "indret_titular"
        ]
      },
      "put": {
        "operationId": "indret_titular_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IndretTitular"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "List of fields",
            "type": "string"
          },
          {
            "name": "expand",
            "in": "query",
            "description": "List of nested objects",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/IndretTitular"
            }
          }
        },
        "tags": [
          "indret_titular"
        ]
      },
      "patch": {
        "operationId": "indret_titular_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IndretTitular"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "List of fields",
            "type": "string"
          },
          {
            "name": "expand",
            "in": "query",
            "description": "List of nested objects",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/IndretTitular"
            }
          }
        },
        "tags": [
          "indret_titular"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this indret titular.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/permissions/": {
      "get": {
        "operationId": "permissions_list",
        "description": "",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "List of fields",
            "type": "string"
          },
          {
            "name": "expand",
            "in": "query",
            "description": "List of nested objects",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Permission"
            }
          }
        },
        "tags": [
          "permissions"
        ]
      },
      "parameters": []
    },
    "/user/": {
      "get": {
        "operationId": "user_list",
        "description": "",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "first_name",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "last_name",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "email",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "phone",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "is_active",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "roles",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "reference_in",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "List of fields",
            "type": "string"
          },
          {
            "name": "expand",
            "in": "query",
            "description": "List of nested objects",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/User"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "user"
        ]
      },
      "post": {
        "operationId": "user_create",
        "description": "User register view",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserCreation"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "List of fields",
            "type": "string"
          },
          {
            "name": "expand",
            "in": "query",
            "description": "List of nested objects",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        },
        "tags": [
          "user"
        ]
      },
      "parameters": []
    },
    "/user/login/": {
      "post": {
        "operationId": "user_login",
        "description": "User login view",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserLogin"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "List of fields",
            "type": "string"
          },
          {
            "name": "expand",
            "in": "query",
            "description": "List of nested objects",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/UserLogin"
            }
          }
        },
        "tags": [
          "user"
        ]
      },
      "parameters": []
    },
    "/user/logout/": {
      "post": {
        "operationId": "user_logout",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserLogin"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "List of fields",
            "type": "string"
          },
          {
            "name": "expand",
            "in": "query",
            "description": "List of nested objects",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        },
        "tags": [
          "user"
        ]
      },
      "parameters": []
    },
    "/user/reset_confirm_password/": {
      "post": {
        "operationId": "user_reset_confirm_password",
        "description": "Reset confirm password",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ResetPassword"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "List of fields",
            "type": "string"
          },
          {
            "name": "expand",
            "in": "query",
            "description": "List of nested objects",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        },
        "tags": [
          "user"
        ]
      },
      "parameters": []
    },
    "/user/reset_password/": {
      "post": {
        "operationId": "user_reset_password",
        "description": "Reset password",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Email"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "List of fields",
            "type": "string"
          },
          {
            "name": "expand",
            "in": "query",
            "description": "List of nested objects",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Email"
            }
          }
        },
        "tags": [
          "user"
        ]
      },
      "parameters": []
    },
    "/user/{id}/": {
      "get": {
        "operationId": "user_read",
        "description": "",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "List of fields",
            "type": "string"
          },
          {
            "name": "expand",
            "in": "query",
            "description": "List of nested objects",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        },
        "tags": [
          "user"
        ]
      },
      "put": {
        "operationId": "user_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "List of fields",
            "type": "string"
          },
          {
            "name": "expand",
            "in": "query",
            "description": "List of nested objects",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        },
        "tags": [
          "user"
        ]
      },
      "patch": {
        "operationId": "user_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "List of fields",
            "type": "string"
          },
          {
            "name": "expand",
            "in": "query",
            "description": "List of nested objects",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        },
        "tags": [
          "user"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this user.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/user_role/": {
      "get": {
        "operationId": "user_role_list",
        "description": "",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "List of fields",
            "type": "string"
          },
          {
            "name": "expand",
            "in": "query",
            "description": "List of nested objects",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/UserRole"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "user_role"
        ]
      },
      "parameters": []
    }
  },
  "definitions": {
    "LoggedAction": {
      "required": [
        "creation_datetime",
        "description",
        "url",
        "http_user_agent"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "creation_datetime": {
          "title": "Creation datetime",
          "description": "Creation datetime of the operation.",
          "type": "string",
          "format": "date-time"
        },
        "system": {
          "title": "System",
          "description": "System on which the operation depends.",
          "type": "string",
          "maxLength": 64,
          "minLength": 1,
          "x-nullable": true
        },
        "subsystem": {
          "title": "Subsystem",
          "description": "Subsystem on which the operation depends.",
          "type": "string",
          "maxLength": 64,
          "minLength": 1,
          "x-nullable": true
        },
        "log_id": {
          "title": "Identification",
          "description": "Identification of the affected object",
          "type": "string",
          "maxLength": 64,
          "minLength": 1,
          "x-nullable": true
        },
        "action": {
          "title": "Action",
          "description": "Action.",
          "type": "string",
          "maxLength": 256,
          "minLength": 1,
          "x-nullable": true
        },
        "description": {
          "title": "Description",
          "description": "Description of the action executed.",
          "type": "string",
          "maxLength": 1024,
          "minLength": 1
        },
        "url": {
          "title": "Url address",
          "description": "URL called for the execution of the action.",
          "type": "string",
          "minLength": 1
        },
        "http_get_parameters": {
          "title": "GET Parameters",
          "description": "GET parameters received by the server.",
          "type": "string",
          "minLength": 1,
          "x-nullable": true
        },
        "http_post_parameters": {
          "title": "POST Parameters",
          "description": "POST parameters received by the server.",
          "type": "string",
          "minLength": 1,
          "x-nullable": true
        },
        "http_method": {
          "title": "HTTP method",
          "description": "HTTP method.",
          "type": "string",
          "enum": [
            "GET",
            "HEAD",
            "POST",
            "PUT",
            "DELETE"
          ]
        },
        "http_user_agent": {
          "title": "Client user agent",
          "description": "User agent that sends the browser to the server.",
          "type": "string",
          "maxLength": 1024,
          "minLength": 1
        },
        "ip": {
          "title": "IP adress",
          "description": "IP address of the client that executes this action.",
          "type": "string",
          "minLength": 1,
          "x-nullable": true
        },
        "executor_user": {
          "title": "User who has made the operation",
          "description": "User who has made the operation.",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "x-nullable": true
        },
        "extra": {
          "title": "Extra data",
          "description": "Extra data",
          "type": "string",
          "minLength": 1,
          "x-nullable": true
        },
        "is_staff": {
          "title": "Action taken by personnel of the application",
          "description": "Action taken by personnel of the application",
          "type": "boolean"
        },
        "response": {
          "title": "Response of the action",
          "description": "Response of the action",
          "type": "string",
          "minLength": 1,
          "x-nullable": true
        },
        "status_code": {
          "title": "HTTP response status",
          "description": "HTTP response status",
          "type": "string",
          "maxLength": 32,
          "minLength": 1,
          "x-nullable": true
        }
      }
    },
    "DocumentLibrary": {
      "required": [
        "name"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "name": {
          "title": "Name",
          "description": "Document name",
          "type": "string",
          "maxLength": 512,
          "minLength": 1
        },
        "document": {
          "title": "Document",
          "description": "Document URL",
          "type": "string",
          "readOnly": true,
          "x-nullable": true,
          "format": "uri"
        },
        "title": {
          "title": "Title",
          "description": "Title",
          "type": "string",
          "maxLength": 512,
          "x-nullable": true
        },
        "author": {
          "title": "Author",
          "description": "Author",
          "type": "string",
          "maxLength": 512,
          "x-nullable": true
        },
        "type_license": {
          "title": "Type license",
          "description": "License type",
          "type": "string",
          "enum": [
            "sense-llicencia",
            "copyright",
            "copyleft",
            "cc-by",
            "cc-by-nc",
            "by-nc-sa",
            "by-nc-nd",
            "by-sa",
            "by-nd",
            "publica"
          ],
          "x-nullable": true
        },
        "description": {
          "title": "Description",
          "description": "Photo description",
          "type": "string"
        },
        "expiry_date": {
          "title": "Expiry date",
          "description": "Date on which the deletion of the photo is scheduled",
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        },
        "visible": {
          "title": "Visible",
          "description": "The file is visible on Internet",
          "type": "boolean"
        },
        "category": {
          "title": "Category",
          "description": "Document category",
          "type": "integer",
          "x-nullable": true
        },
        "category_data": {
          "title": "Category data",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "title": "Type",
          "type": "integer",
          "x-nullable": true
        }
      }
    },
    "DocumentLibraryCreate": {
      "required": [
        "name",
        "document"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "name": {
          "title": "Name",
          "description": "Document name",
          "type": "string",
          "maxLength": 512,
          "minLength": 1
        },
        "document": {
          "title": "Document",
          "description": "document reference uuid",
          "type": "string"
        },
        "type": {
          "title": "Type",
          "type": "integer",
          "x-nullable": true
        },
        "title": {
          "title": "Title",
          "description": "Title",
          "type": "string",
          "maxLength": 512,
          "x-nullable": true
        },
        "author": {
          "title": "Author",
          "description": "Author",
          "type": "string",
          "maxLength": 512,
          "x-nullable": true
        },
        "type_license": {
          "title": "Type license",
          "description": "License type",
          "type": "string",
          "enum": [
            "sense-llicencia",
            "copyright",
            "copyleft",
            "cc-by",
            "cc-by-nc",
            "by-nc-sa",
            "by-nc-nd",
            "by-sa",
            "by-nd",
            "publica"
          ],
          "x-nullable": true
        },
        "description": {
          "title": "Description",
          "description": "Photo description",
          "type": "string"
        },
        "expiry_date": {
          "title": "Expiry date",
          "description": "Date on which the deletion of the photo is scheduled",
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        },
        "visible": {
          "title": "Visible",
          "description": "The file is visible on Internet",
          "type": "boolean"
        },
        "category": {
          "title": "Category",
          "description": "Document category",
          "type": "integer",
          "x-nullable": true
        }
      }
    },
    "DocumentLibraryFileUpload": {
      "type": "object",
      "properties": {
        "document": {
          "title": "Document",
          "type": "string",
          "readOnly": true,
          "format": "uri"
        },
        "uuid": {
          "title": "Uuid",
          "type": "string",
          "readOnly": true,
          "minLength": 1
        }
      }
    },
    "DocumentLibraryUpdate": {
      "required": [
        "name"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "name": {
          "title": "Name",
          "description": "Document name",
          "type": "string",
          "maxLength": 512,
          "minLength": 1
        },
        "document": {
          "title": "Document",
          "description": "Document URL",
          "type": "string",
          "readOnly": true,
          "x-nullable": true,
          "format": "uri"
        },
        "title": {
          "title": "Title",
          "description": "Title",
          "type": "string",
          "maxLength": 512,
          "x-nullable": true
        },
        "author": {
          "title": "Author",
          "description": "Author",
          "type": "string",
          "maxLength": 512,
          "x-nullable": true
        },
        "type_license": {
          "title": "Type license",
          "description": "License type",
          "type": "string",
          "enum": [
            "sense-llicencia",
            "copyright",
            "copyleft",
            "cc-by",
            "cc-by-nc",
            "by-nc-sa",
            "by-nc-nd",
            "by-sa",
            "by-nd",
            "publica"
          ],
          "x-nullable": true
        },
        "description": {
          "title": "Description",
          "description": "Photo description",
          "type": "string"
        },
        "expiry_date": {
          "title": "Expiry date",
          "description": "Date on which the deletion of the photo is scheduled",
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        },
        "visible": {
          "title": "Visible",
          "description": "The file is visible on Internet",
          "type": "boolean"
        },
        "category": {
          "title": "Category",
          "description": "Document category",
          "type": "integer",
          "x-nullable": true
        }
      }
    },
    "DocumentLibraryBase64": {
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "document_base64": {
          "title": "Document base64",
          "type": "string",
          "readOnly": true,
          "minLength": 1
        }
      }
    },
    "GeneralMasterTables": {
      "required": [
        "name",
        "type",
        "parent_table"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "name": {
          "title": "Name",
          "type": "string",
          "minLength": 1
        },
        "type": {
          "title": "Type of Master Table",
          "type": "string",
          "enum": [
            "reference_in",
            "food_field",
            "environmental_field",
            "non_compliance",
            "precautionary_measures",
            "type_of_action",
            "reason_for_inspection",
            "indret_center_type",
            "indret_category",
            "indret_type",
            "indret_center",
            "indret_contact_relation",
            "indret_document_type",
            "description_of_activity",
            "types_of_biocides",
            "hazard_classification_of_biocides",
            "category",
            "indret_water_sector",
            "indret_circuit_type",
            "action_inspection_reason",
            "action_rate",
            "action_capacity",
            "sample_observations",
            "sample_type"
          ]
        },
        "is_visible": {
          "title": "Master Table Visibility",
          "type": "boolean"
        },
        "is_editable": {
          "title": "Master Table Editability",
          "type": "boolean"
        },
        "is_deletable": {
          "title": "Master Table Deletability",
          "type": "boolean"
        },
        "behaviour_id": {
          "type": "array",
          "items": {
            "title": "Behaviour id",
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 0,
            "x-nullable": true
          },
          "x-nullable": true
        },
        "parent_table": {
          "type": "array",
          "items": {
            "title": "Parent Master Table",
            "type": "integer"
          },
          "uniqueItems": true
        }
      }
    },
    "GeneralMasterTablesCreate": {
      "required": [
        "name",
        "type",
        "parent_table"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "is_multiple": {
          "title": "Is multiple",
          "type": "boolean",
          "default": false
        },
        "name": {
          "title": "Name",
          "type": "string",
          "minLength": 1
        },
        "type": {
          "title": "Type of Master Table",
          "type": "string",
          "enum": [
            "reference_in",
            "food_field",
            "environmental_field",
            "non_compliance",
            "precautionary_measures",
            "type_of_action",
            "reason_for_inspection",
            "indret_center_type",
            "indret_category",
            "indret_type",
            "indret_center",
            "indret_contact_relation",
            "indret_document_type",
            "description_of_activity",
            "types_of_biocides",
            "hazard_classification_of_biocides",
            "category",
            "indret_water_sector",
            "indret_circuit_type",
            "action_inspection_reason",
            "action_rate",
            "action_capacity",
            "sample_observations",
            "sample_type"
          ]
        },
        "is_visible": {
          "title": "Master Table Visibility",
          "type": "boolean"
        },
        "is_editable": {
          "title": "Master Table Editability",
          "type": "boolean"
        },
        "is_deletable": {
          "title": "Master Table Deletability",
          "type": "boolean"
        },
        "behaviour_id": {
          "type": "array",
          "items": {
            "title": "Behaviour id",
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 0,
            "x-nullable": true
          },
          "x-nullable": true
        },
        "parent_table": {
          "type": "array",
          "items": {
            "title": "Parent Master Table",
            "type": "integer"
          },
          "uniqueItems": true
        }
      }
    },
    "GeneralMasterTablesTypes": {
      "type": "object",
      "properties": {
        "id": {
          "title": "Id",
          "type": "string",
          "readOnly": true,
          "minLength": 1
        },
        "name": {
          "title": "Name",
          "type": "string",
          "readOnly": true,
          "minLength": 1
        }
      }
    },
    "IndretContact": {
      "required": [
        "first_name",
        "last_name",
        "email",
        "phone",
        "scope_is_alimentary"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "indret": {
          "title": "Indret",
          "type": "integer",
          "x-nullable": true
        },
        "relation": {
          "title": "Relation",
          "type": "integer",
          "x-nullable": true
        },
        "first_name": {
          "title": "First name",
          "type": "string",
          "minLength": 1
        },
        "last_name": {
          "title": "Last name",
          "type": "string",
          "minLength": 1
        },
        "email": {
          "title": "Email",
          "type": "string",
          "format": "email",
          "maxLength": 254,
          "minLength": 1
        },
        "phone": {
          "title": "Phone",
          "type": "string",
          "maxLength": 128,
          "minLength": 1
        },
        "scope_is_alimentary": {
          "title": "Scope is alimentary",
          "type": "boolean"
        },
        "identification": {
          "title": "Identification",
          "type": "string",
          "minLength": 1,
          "x-nullable": true
        },
        "identification_type": {
          "title": "Identification type",
          "type": "string",
          "enum": [
            "dni",
            "nie",
            "passport"
          ],
          "x-nullable": true
        },
        "documents_accreditative": {
          "type": "array",
          "items": {
            "type": "integer"
          },
          "uniqueItems": true
        }
      }
    },
    "IndretTitular": {
      "required": [
        "is_legal_entity",
        "primary_phone",
        "type_of_road_name",
        "street_name",
        "start_number_name",
        "population",
        "province"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "is_legal_entity": {
          "title": "Is legal entity",
          "type": "boolean"
        },
        "identification": {
          "title": "Identification",
          "type": "string",
          "minLength": 1,
          "x-nullable": true
        },
        "first_name": {
          "title": "First name",
          "type": "string",
          "x-nullable": true
        },
        "last_name": {
          "title": "Last name",
          "type": "string",
          "x-nullable": true
        },
        "second_last_name": {
          "title": "Second last name",
          "type": "string",
          "minLength": 1,
          "x-nullable": true
        },
        "identification_type": {
          "title": "Identification type",
          "type": "string",
          "enum": [
            "dni",
            "nie",
            "passport"
          ],
          "x-nullable": true
        },
        "social_reason": {
          "title": "Social reason",
          "type": "string",
          "minLength": 1,
          "x-nullable": true
        },
        "CIF": {
          "title": "CIF",
          "type": "string",
          "minLength": 1,
          "x-nullable": true
        },
        "registration_date": {
          "title": "Registration date",
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        },
        "termination_date": {
          "title": "Termination date",
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "x-nullable": true
        },
        "primary_phone": {
          "title": "Primary phone",
          "type": "string",
          "maxLength": 128,
          "minLength": 1
        },
        "secondary_phone": {
          "title": "Secondary phone",
          "type": "string",
          "maxLength": 128,
          "minLength": 1,
          "x-nullable": true
        },
        "emails": {
          "type": "array",
          "items": {
            "title": "Emails",
            "type": "string",
            "format": "email",
            "maxLength": 254,
            "minLength": 1
          },
          "maxItems": 8,
          "x-nullable": true
        },
        "is_public": {
          "title": "Is public",
          "type": "boolean",
          "x-nullable": true
        },
        "tax_exempt": {
          "title": "Tax exempt",
          "type": "boolean"
        },
        "group": {
          "title": "Group",
          "type": "string",
          "maxLength": 255,
          "minLength": 1,
          "x-nullable": true
        },
        "type_of_road_id": {
          "title": "Type of road id",
          "type": "string",
          "maxLength": 32,
          "x-nullable": true
        },
        "type_of_road_name": {
          "title": "Type of road name",
          "type": "string",
          "maxLength": 32,
          "minLength": 1
        },
        "street_id": {
          "title": "Street id",
          "type": "string",
          "maxLength": 32,
          "minLength": 1,
          "x-nullable": true
        },
        "street_name": {
          "title": "Street name",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "start_number_id": {
          "title": "Start number id",
          "type": "string",
          "maxLength": 32,
          "minLength": 1,
          "x-nullable": true
        },
        "start_number_name": {
          "title": "Start number name",
          "type": "string",
          "maxLength": 32,
          "minLength": 1
        },
        "zip_code": {
          "title": "Zip code",
          "type": "string",
          "maxLength": 6,
          "minLength": 1,
          "x-nullable": true
        },
        "population": {
          "title": "Population",
          "type": "string",
          "maxLength": 40,
          "minLength": 1
        },
        "province": {
          "title": "Province",
          "type": "string",
          "maxLength": 40,
          "minLength": 1
        }
      }
    },
    "SamplePoint": {
      "required": [
        "name"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "name": {
          "title": "Name",
          "type": "string",
          "minLength": 1
        },
        "is_active": {
          "title": "Is active",
          "type": "boolean"
        },
        "indret_circuit": {
          "title": "Indret circuit",
          "type": "integer",
          "x-nullable": true
        }
      }
    },
    "IndretCompany": {
      "required": [
        "name"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "name": {
          "title": "Name",
          "type": "string",
          "minLength": 1
        },
        "identification": {
          "title": "Identification",
          "type": "string",
          "minLength": 1,
          "x-nullable": true
        },
        "phone": {
          "title": "Phone",
          "type": "string",
          "maxLength": 128,
          "minLength": 1,
          "x-nullable": true
        },
        "email": {
          "title": "Email",
          "type": "string",
          "format": "email",
          "maxLength": 254,
          "minLength": 1,
          "x-nullable": true
        },
        "contact_person": {
          "title": "Contact person",
          "type": "string",
          "minLength": 1,
          "x-nullable": true
        },
        "address": {
          "title": "Address",
          "type": "string",
          "minLength": 1,
          "x-nullable": true
        },
        "rsipac": {
          "title": "Rsipac",
          "type": "string",
          "minLength": 1,
          "x-nullable": true
        },
        "rgs": {
          "title": "Rgs",
          "type": "string",
          "minLength": 1,
          "x-nullable": true
        },
        "registered_office": {
          "title": "Registered office",
          "type": "string",
          "minLength": 1,
          "x-nullable": true
        },
        "observations": {
          "title": "Observations",
          "type": "string",
          "minLength": 1,
          "x-nullable": true
        },
        "type_of_road_id": {
          "title": "Type of road id",
          "type": "string",
          "maxLength": 32,
          "minLength": 1,
          "x-nullable": true
        },
        "type_of_road_name": {
          "title": "Type of road name",
          "type": "string",
          "maxLength": 32,
          "minLength": 1,
          "x-nullable": true
        },
        "street_id": {
          "title": "Street id",
          "type": "string",
          "maxLength": 32,
          "minLength": 1,
          "x-nullable": true
        },
        "street_name": {
          "title": "Street name",
          "type": "string",
          "maxLength": 255,
          "minLength": 1,
          "x-nullable": true
        },
        "start_number_id": {
          "title": "Start number id",
          "type": "string",
          "maxLength": 32,
          "minLength": 1,
          "x-nullable": true
        },
        "start_number_name": {
          "title": "Start number name",
          "type": "string",
          "maxLength": 32,
          "minLength": 1,
          "x-nullable": true
        },
        "zip_code": {
          "title": "Zip code",
          "type": "string",
          "maxLength": 6,
          "minLength": 1,
          "x-nullable": true
        },
        "population": {
          "title": "Population",
          "type": "string",
          "maxLength": 40,
          "minLength": 1,
          "x-nullable": true
        },
        "province": {
          "title": "Province",
          "type": "string",
          "maxLength": 40,
          "minLength": 1,
          "x-nullable": true
        }
      }
    },
    "IndretCircuitCanteen": {
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "management_company": {
          "$ref": "#/definitions/IndretCompany"
        },
        "supply_company": {
          "$ref": "#/definitions/IndretCompany"
        },
        "ages": {
          "type": "array",
          "items": {
            "title": "Ages",
            "type": "string",
            "enum": [
              "0-3",
              "4-6",
              "7-9",
              "9-12"
            ]
          },
          "maxItems": 7,
          "x-nullable": true
        },
        "feeding_bottle_childs": {
          "title": "Feeding bottle childs",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": 0,
          "x-nullable": true
        },
        "menu_per_turn": {
          "title": "Menu per turn",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": 0,
          "x-nullable": true
        },
        "reception_hours": {
          "title": "Reception hours",
          "type": "string",
          "minLength": 1,
          "x-nullable": true
        },
        "has_donations": {
          "title": "Has donations",
          "type": "boolean",
          "x-nullable": true
        },
        "is_attached_to_project": {
          "title": "Is attached to project",
          "type": "boolean",
          "x-nullable": true
        },
        "project_name": {
          "title": "Project name",
          "type": "string",
          "minLength": 1,
          "x-nullable": true
        },
        "is_supply_intern": {
          "title": "Is supply intern",
          "type": "boolean",
          "x-nullable": true
        },
        "is_supply_extern": {
          "title": "Is supply extern",
          "type": "boolean",
          "x-nullable": true
        },
        "type_supply_company": {
          "title": "Type supply company",
          "type": "string",
          "enum": [
            "central_kitchen",
            "commercial_restaurant",
            "social_restoration",
            "subtitle",
            "supply_company"
          ],
          "x-nullable": true
        },
        "type_supply": {
          "title": "Type supply",
          "type": "string",
          "enum": [
            "cold_line",
            "warm_up",
            "frozen"
          ],
          "x-nullable": true
        },
        "is_internal_management": {
          "title": "Is internal management",
          "type": "boolean",
          "x-nullable": true
        },
        "supplies_others": {
          "title": "Supplies others",
          "type": "boolean",
          "x-nullable": true
        },
        "other_supply_companies": {
          "title": "Other supply companies",
          "type": "string",
          "enum": [
            "same_ownership",
            "marginality",
            "with_rsipac"
          ],
          "x-nullable": true
        },
        "number_lunch_menus": {
          "title": "Number lunch menus",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "x-nullable": true
        },
        "number_diner_menus": {
          "title": "Number diner menus",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "x-nullable": true
        },
        "week_days": {
          "type": "array",
          "items": {
            "title": "Week days",
            "type": "string",
            "enum": [
              "lun",
              "mar",
              "mie",
              "jue",
              "vie",
              "sab",
              "dom"
            ]
          },
          "maxItems": 7,
          "x-nullable": true
        }
      }
    },
    "IndretCircuit": {
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "sample_points": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SamplePoint"
          }
        },
        "canteen": {
          "$ref": "#/definitions/IndretCircuitCanteen"
        },
        "is_active": {
          "title": "Is active",
          "type": "boolean"
        },
        "is_canteen": {
          "title": "Is canteen",
          "type": "boolean"
        },
        "name": {
          "title": "Name",
          "type": "string",
          "minLength": 1,
          "x-nullable": true
        },
        "registration_date": {
          "title": "Registration date",
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        },
        "termination_date": {
          "title": "Termination date",
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        },
        "indret": {
          "title": "Indret",
          "type": "integer",
          "x-nullable": true
        },
        "type": {
          "title": "Type",
          "type": "integer",
          "x-nullable": true
        },
        "tech_responsible": {
          "title": "Tech responsible",
          "type": "integer",
          "x-nullable": true
        }
      }
    },
    "Indret": {
      "required": [
        "indret_contacts",
        "circuits"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "documents_data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DocumentLibrary"
          },
          "readOnly": true
        },
        "indret_contacts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IndretContact"
          }
        },
        "identification": {
          "title": "Identification",
          "type": "string",
          "minLength": 1,
          "x-nullable": true
        },
        "id_source": {
          "title": "Id source",
          "type": "string",
          "minLength": 1,
          "x-nullable": true
        },
        "id_intern": {
          "title": "Id intern",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "title": "Name",
          "type": "string"
        },
        "categories": {
          "type": "array",
          "items": {
            "type": "integer"
          },
          "uniqueItems": true
        },
        "types": {
          "type": "array",
          "items": {
            "type": "integer"
          },
          "uniqueItems": true
        },
        "pncoca": {
          "title": "Pncoca",
          "type": "string",
          "enum": [
            "g1",
            "g2",
            "g3"
          ],
          "x-nullable": true
        },
        "retail_registration_number": {
          "title": "Retail registration number",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "x-nullable": true
        },
        "number_workers": {
          "title": "Number workers",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": 0,
          "x-nullable": true
        },
        "registration_date": {
          "title": "Registration date",
          "type": "string",
          "format": "date-time"
        },
        "termination_date": {
          "title": "Termination date",
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "x-nullable": true
        },
        "ambiental_risk": {
          "title": "Ambiental risk",
          "type": "string",
          "minLength": 1,
          "x-nullable": true
        },
        "before_1980": {
          "title": "Before 1980",
          "type": "boolean",
          "x-nullable": true
        },
        "home_deposit": {
          "title": "Home deposit",
          "type": "boolean",
          "x-nullable": true
        },
        "is_property": {
          "title": "Is property",
          "type": "boolean",
          "x-nullable": true
        },
        "school_code": {
          "title": "School code",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "x-nullable": true
        },
        "risk": {
          "title": "Risk",
          "type": "string",
          "minLength": 1,
          "x-nullable": true
        },
        "number_users": {
          "title": "Number users",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "x-nullable": true
        },
        "water_usage": {
          "title": "Water usage",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "x-nullable": true
        },
        "usual_water_usage": {
          "title": "Usual water usage",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "x-nullable": true
        },
        "type_of_road_id": {
          "title": "Type of road id",
          "type": "string",
          "maxLength": 32,
          "minLength": 1,
          "x-nullable": true
        },
        "type_of_road_name": {
          "title": "Type of road name",
          "type": "string",
          "maxLength": 32,
          "minLength": 1,
          "x-nullable": true
        },
        "street_id": {
          "title": "Street id",
          "type": "string",
          "maxLength": 32,
          "minLength": 1,
          "x-nullable": true
        },
        "street_name": {
          "title": "Street name",
          "type": "string",
          "maxLength": 255,
          "minLength": 1,
          "x-nullable": true
        },
        "start_number_id": {
          "title": "Start number id",
          "type": "string",
          "maxLength": 32,
          "minLength": 1,
          "x-nullable": true
        },
        "start_number_name": {
          "title": "Start number name",
          "type": "string",
          "maxLength": 32,
          "minLength": 1,
          "x-nullable": true
        },
        "zip_code": {
          "title": "Zip code",
          "type": "string",
          "maxLength": 6,
          "minLength": 1,
          "x-nullable": true
        },
        "neighborhood_id": {
          "title": "Neighborhood id",
          "type": "string",
          "maxLength": 32,
          "minLength": 1,
          "x-nullable": true
        },
        "neighborhood_name": {
          "title": "Neighborhood name",
          "type": "string",
          "maxLength": 255,
          "minLength": 1,
          "x-nullable": true
        },
        "district_id": {
          "title": "District id",
          "type": "string",
          "maxLength": 32,
          "minLength": 1,
          "x-nullable": true
        },
        "district_name": {
          "title": "District name",
          "type": "string",
          "maxLength": 255,
          "minLength": 1,
          "x-nullable": true
        },
        "dev_coordinates_lat": {
          "title": "Dev coordinates lat",
          "type": "string",
          "x-nullable": true
        },
        "dev_coordinates_lon": {
          "title": "Dev coordinates lon",
          "type": "string",
          "x-nullable": true
        },
        "center": {
          "title": "Center",
          "type": "integer",
          "x-nullable": true
        },
        "has_deposit": {
          "title": "Has deposit",
          "type": "boolean",
          "x-nullable": true
        },
        "deposit_location": {
          "title": "Deposit location",
          "type": "string",
          "minLength": 1,
          "x-nullable": true
        },
        "water_origin": {
          "title": "Water origin",
          "type": "string",
          "enum": [
            "public",
            "underground",
            "regenerade"
          ],
          "x-nullable": true
        },
        "sector": {
          "title": "Sector",
          "type": "integer",
          "x-nullable": true
        },
        "air_code": {
          "title": "Air code",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "x-nullable": true
        },
        "air_hour": {
          "title": "Air hour",
          "type": "string",
          "x-nullable": true
        },
        "air_traffic": {
          "title": "Air traffic",
          "type": "boolean",
          "x-nullable": true
        },
        "air_works_manual": {
          "title": "Air works manual",
          "type": "boolean",
          "x-nullable": true
        },
        "air_is_urban": {
          "title": "Air is urban",
          "type": "boolean",
          "x-nullable": true
        },
        "health_auth_number": {
          "title": "Health auth number",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "x-nullable": true
        },
        "titularity": {
          "$ref": "#/definitions/IndretTitular"
        },
        "titularity_id": {
          "title": "Titularity id",
          "type": "integer"
        },
        "notification_person_name": {
          "title": "Notification person name",
          "type": "string",
          "minLength": 1,
          "x-nullable": true
        },
        "notification_email": {
          "title": "Notification email",
          "type": "string",
          "format": "email",
          "maxLength": 254,
          "minLength": 1,
          "x-nullable": true
        },
        "notification_phone": {
          "title": "Notification phone",
          "type": "string",
          "maxLength": 128,
          "minLength": 1,
          "x-nullable": true
        },
        "related_indrets": {
          "type": "array",
          "items": {
            "type": "integer"
          },
          "uniqueItems": true
        },
        "observations": {
          "title": "Observations",
          "type": "string",
          "minLength": 1,
          "x-nullable": true
        },
        "address": {
          "title": "Address",
          "type": "string",
          "readOnly": true
        },
        "documents": {
          "type": "array",
          "items": {
            "type": "integer"
          },
          "uniqueItems": true
        },
        "circuits": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IndretCircuit"
          }
        },
        "is_active": {
          "title": "Is active",
          "type": "boolean"
        },
        "deactivation_reason": {
          "title": "Deactivation reason",
          "type": "string",
          "minLength": 1,
          "x-nullable": true
        }
      }
    },
    "ActionMinute": {
      "required": [
        "date",
        "start_action_time",
        "end_action_time",
        "action"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "source_number": {
          "title": "Source number",
          "type": "string",
          "minLength": 1,
          "x-nullable": true
        },
        "date": {
          "title": "Date",
          "type": "string",
          "format": "date"
        },
        "start_action_time": {
          "title": "Start action time",
          "type": "string"
        },
        "end_action_time": {
          "title": "End action time",
          "type": "string"
        },
        "is_catalan": {
          "title": "Is catalan",
          "type": "boolean"
        },
        "action": {
          "title": "Action",
          "type": "integer"
        },
        "document": {
          "title": "Document",
          "type": "integer",
          "x-nullable": true
        }
      }
    },
    "ActionInterested": {
      "required": [
        "action"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "name": {
          "title": "Name",
          "type": "string",
          "minLength": 1,
          "x-nullable": true
        },
        "interested_will": {
          "title": "Interested will",
          "type": "boolean"
        },
        "is_present": {
          "title": "Is present",
          "type": "boolean"
        },
        "identification_type": {
          "title": "Identification type",
          "type": "string",
          "enum": [
            "dni",
            "nie",
            "passport"
          ],
          "x-nullable": true
        },
        "identification": {
          "title": "Identification",
          "type": "string",
          "minLength": 1,
          "x-nullable": true
        },
        "action": {
          "title": "Action",
          "type": "integer"
        },
        "in_capacity_of": {
          "title": "In capacity of",
          "type": "integer",
          "x-nullable": true
        }
      }
    },
    "ActionDocument": {
      "required": [
        "type",
        "file_name"
      ],
      "type": "object",
      "properties": {
        "type": {
          "title": "Type",
          "type": "string",
          "enum": [
            "invoice",
            "label",
            "tech_invoice",
            "sec_invoice",
            "photo",
            "contract",
            "appcc",
            "psa",
            "minute",
            "report",
            "others"
          ]
        },
        "other_type_text": {
          "title": "Other type text",
          "type": "string",
          "minLength": 1,
          "x-nullable": true
        },
        "document": {
          "title": "Document",
          "type": "integer",
          "x-nullable": true
        },
        "file_name": {
          "title": "File name",
          "type": "string",
          "minLength": 1
        }
      }
    },
    "ActionProduct": {
      "required": [
        "product",
        "number",
        "is_revision_passed",
        "indret"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "product": {
          "title": "Product",
          "type": "string",
          "minLength": 1
        },
        "commercial_denomination": {
          "title": "Commercial denomination",
          "type": "string",
          "minLength": 1,
          "x-nullable": true
        },
        "brand": {
          "title": "Brand",
          "type": "string",
          "minLength": 1,
          "x-nullable": true
        },
        "number": {
          "title": "Number",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": -2147483648
        },
        "is_revision_passed": {
          "title": "Is revision passed",
          "type": "boolean"
        },
        "extra_info": {
          "title": "Extra info",
          "type": "string",
          "minLength": 1,
          "x-nullable": true
        },
        "indret": {
          "title": "Indret",
          "type": "integer"
        },
        "product_type": {
          "title": "Product type",
          "type": "integer",
          "x-nullable": true
        }
      }
    },
    "IndretAction": {
      "required": [
        "indret_circuits",
        "type_is_alimentary",
        "is_presencial",
        "date_scheduled",
        "action_date",
        "documents",
        "products"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "created": {
          "title": "Created",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "modified": {
          "title": "Modified",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "indret_changes": {
          "title": "Indret changes",
          "type": "string",
          "enum": [
            "act_changes",
            "titularity_change",
            "social_address_change",
            "industrial_address_change"
          ],
          "x-nullable": true
        },
        "indret": {
          "title": "Indret",
          "type": "integer",
          "x-nullable": true
        },
        "indret_circuits": {
          "type": "array",
          "items": {
            "type": "integer"
          },
          "uniqueItems": true
        },
        "type_is_alimentary": {
          "title": "Type is alimentary",
          "type": "boolean"
        },
        "status": {
          "title": "Status",
          "type": "string",
          "enum": [
            "planned",
            "done",
            "cancelled",
            "pending_planning",
            "penging_assingnment"
          ],
          "x-nullable": true
        },
        "planning_period": {
          "title": "Planning period",
          "type": "string",
          "enum": [
            "3m",
            "6m",
            "9m",
            "12m"
          ],
          "x-nullable": true
        },
        "deactivation_reason": {
          "title": "Deactivation reason",
          "type": "string",
          "enum": [
            "deactivation",
            "titular_change",
            "temp_closing",
            "others"
          ],
          "x-nullable": true
        },
        "other_reasons": {
          "title": "Other reasons",
          "type": "string",
          "minLength": 1,
          "x-nullable": true
        },
        "creator": {
          "title": "Creator",
          "type": "integer",
          "x-nullable": true
        },
        "is_presencial": {
          "title": "Is presencial",
          "type": "boolean"
        },
        "date_scheduled": {
          "title": "Date scheduled",
          "type": "string",
          "format": "date"
        },
        "action_date": {
          "title": "Action date",
          "type": "string",
          "format": "date"
        },
        "inspection_reason": {
          "title": "Inspection reason",
          "type": "integer",
          "x-nullable": true
        },
        "action_type": {
          "title": "Action type",
          "type": "integer",
          "x-nullable": true
        },
        "rate": {
          "title": "Rate",
          "type": "integer",
          "x-nullable": true
        },
        "observations": {
          "title": "Observations",
          "type": "string",
          "x-nullable": true
        },
        "technicians": {
          "type": "array",
          "items": {
            "type": "integer"
          },
          "uniqueItems": true
        },
        "id_action": {
          "title": "Id action",
          "type": "string",
          "readOnly": true
        },
        "samples_number": {
          "title": "Samples number",
          "type": "string",
          "readOnly": true
        },
        "minute": {
          "$ref": "#/definitions/ActionMinute"
        },
        "interested": {
          "$ref": "#/definitions/ActionInterested"
        },
        "documents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ActionDocument"
          }
        },
        "products": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ActionProduct"
          }
        }
      }
    },
    "Permission": {
      "required": [
        "url",
        "action"
      ],
      "type": "object",
      "properties": {
        "url": {
          "title": "Url",
          "type": "string",
          "minLength": 1
        },
        "action": {
          "title": "Action",
          "type": "string",
          "minLength": 1
        }
      }
    },
    "User": {
      "required": [
        "email",
        "roles"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "username": {
          "title": "Username",
          "type": "string",
          "readOnly": true,
          "minLength": 1
        },
        "email": {
          "title": "Email",
          "type": "string",
          "format": "email",
          "maxLength": 254,
          "minLength": 1
        },
        "first_name": {
          "title": "First name",
          "type": "string",
          "maxLength": 30,
          "minLength": 1,
          "x-nullable": true
        },
        "last_name": {
          "title": "Last name",
          "type": "string",
          "maxLength": 150,
          "minLength": 1,
          "x-nullable": true
        },
        "roles": {
          "type": "array",
          "items": {
            "type": "integer"
          },
          "uniqueItems": true
        },
        "phone": {
          "title": "Phone",
          "type": "string",
          "maxLength": 16,
          "minLength": 1,
          "x-nullable": true
        },
        "mobile_phone": {
          "title": "Mobile phone",
          "type": "string",
          "maxLength": 16,
          "minLength": 1,
          "x-nullable": true
        },
        "department": {
          "title": "Department",
          "type": "string",
          "maxLength": 32,
          "minLength": 1,
          "x-nullable": true
        },
        "reference_in": {
          "type": "array",
          "items": {
            "type": "integer"
          },
          "uniqueItems": true
        },
        "charge": {
          "title": "Charge",
          "type": "string",
          "maxLength": 64,
          "minLength": 1,
          "x-nullable": true
        },
        "registration_number": {
          "title": "Registration number",
          "type": "string",
          "maxLength": 64,
          "minLength": 1,
          "x-nullable": true
        },
        "is_inspector": {
          "title": "Is inspector",
          "type": "boolean",
          "x-nullable": true
        },
        "is_active": {
          "title": "Is active",
          "type": "boolean",
          "x-nullable": true
        },
        "weekly_inspections": {
          "title": "Weekly inspections",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": 0,
          "x-nullable": true
        },
        "company_name": {
          "title": "Company name",
          "type": "string",
          "maxLength": 128,
          "minLength": 1,
          "x-nullable": true
        },
        "deactivation_datetime": {
          "title": "Deactivation datetime",
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "x-nullable": true
        },
        "login_attempts": {
          "title": "Login attempts",
          "type": "integer",
          "readOnly": true
        },
        "last_bad_login_attempt_datetime": {
          "title": "Last bad login attempt datetime",
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "x-nullable": true
        },
        "has_login_blocked": {
          "title": "Has login blocked",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "UserCreation": {
      "required": [
        "email",
        "roles"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "last_login": {
          "title": "Last login",
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "x-nullable": true
        },
        "is_superuser": {
          "title": "Superuser status",
          "description": "Designates that this user has all permissions without explicitly assigning them.",
          "type": "boolean",
          "readOnly": true
        },
        "username": {
          "title": "Username",
          "type": "string",
          "readOnly": true,
          "minLength": 1
        },
        "password": {
          "title": "Password",
          "type": "string",
          "maxLength": 128,
          "minLength": 1,
          "x-nullable": true
        },
        "email": {
          "title": "Email",
          "type": "string",
          "format": "email",
          "maxLength": 254,
          "minLength": 1
        },
        "first_name": {
          "title": "First name",
          "type": "string",
          "maxLength": 30,
          "minLength": 1,
          "x-nullable": true
        },
        "last_name": {
          "title": "Last name",
          "type": "string",
          "maxLength": 150,
          "minLength": 1,
          "x-nullable": true
        },
        "phone": {
          "title": "Phone",
          "type": "string",
          "maxLength": 16,
          "minLength": 1,
          "x-nullable": true
        },
        "mobile_phone": {
          "title": "Mobile phone",
          "type": "string",
          "maxLength": 16,
          "minLength": 1,
          "x-nullable": true
        },
        "department": {
          "title": "Department",
          "type": "string",
          "maxLength": 32,
          "minLength": 1,
          "x-nullable": true
        },
        "charge": {
          "title": "Charge",
          "type": "string",
          "maxLength": 64,
          "minLength": 1,
          "x-nullable": true
        },
        "registration_number": {
          "title": "Registration number",
          "type": "string",
          "maxLength": 64,
          "minLength": 1,
          "x-nullable": true
        },
        "is_inspector": {
          "title": "Is inspector",
          "type": "boolean",
          "x-nullable": true
        },
        "is_active": {
          "title": "Is active",
          "type": "boolean",
          "x-nullable": true
        },
        "weekly_inspections": {
          "title": "Weekly inspections",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": 0,
          "x-nullable": true
        },
        "company_name": {
          "title": "Company name",
          "type": "string",
          "maxLength": 128,
          "minLength": 1,
          "x-nullable": true
        },
        "date_joined": {
          "title": "Date joined",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "deactivation_datetime": {
          "title": "Deactivation datetime",
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "x-nullable": true
        },
        "login_attempts": {
          "title": "Login attempts",
          "type": "integer",
          "readOnly": true
        },
        "last_bad_login_attempt_datetime": {
          "title": "Last bad login attempt datetime",
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "x-nullable": true
        },
        "groups": {
          "description": "The groups this user belongs to. A user will get all permissions granted to each of their groups.",
          "type": "array",
          "items": {
            "description": "The groups this user belongs to. A user will get all permissions granted to each of their groups.",
            "type": "integer"
          },
          "readOnly": true,
          "uniqueItems": true
        },
        "user_permissions": {
          "description": "Specific permissions for this user.",
          "type": "array",
          "items": {
            "description": "Specific permissions for this user.",
            "type": "integer"
          },
          "readOnly": true,
          "uniqueItems": true
        },
        "roles": {
          "type": "array",
          "items": {
            "type": "integer"
          },
          "uniqueItems": true
        },
        "reference_in": {
          "type": "array",
          "items": {
            "type": "integer"
          },
          "uniqueItems": true
        }
      }
    },
    "UserLogin": {
      "type": "object",
      "properties": {
        "username": {
          "title": "Username",
          "type": "string",
          "pattern": "^[\\w.@+-]+$",
          "maxLength": 150
        },
        "password": {
          "title": "Password",
          "type": "string",
          "maxLength": 128,
          "minLength": 1,
          "x-nullable": true
        },
        "csrftoken": {
          "title": "Csrftoken",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ResetPassword": {
      "required": [
        "token",
        "new_password1",
        "new_password2"
      ],
      "type": "object",
      "properties": {
        "token": {
          "title": "Token",
          "type": "string",
          "minLength": 1
        },
        "new_password1": {
          "title": "New password1",
          "type": "string",
          "minLength": 1
        },
        "new_password2": {
          "title": "New password2",
          "type": "string",
          "minLength": 1
        }
      }
    },
    "Email": {
      "required": [
        "email"
      ],
      "type": "object",
      "properties": {
        "email": {
          "title": "Email",
          "type": "string",
          "format": "email",
          "minLength": 1
        }
      }
    },
    "UserRole": {
      "required": [
        "role_display",
        "role"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "role_display": {
          "title": "Role display",
          "type": "string",
          "minLength": 1
        },
        "role": {
          "title": "Role",
          "type": "string",
          "enum": [
            "superadmin",
            "admin",
            "referent",
            "manager",
            "query"
          ]
        }
      }
    }
  }
}
